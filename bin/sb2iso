#!/bin/bash
# Author: Tomas M. <http://www.linux-live.org>
# Author: crims0n. <https://minios.dev>

VERSION="1.3"
SYSTEMNAME="MiniOS"
export TEXTDOMAIN="minios-tools"
TEMP=/tmp/minios.iso.$$
MODULES=()
if [ -d "/run/initramfs/memory" ]; then
    SOURCE="/run/initramfs/memory"
elif [ -d "/memory" ]; then
    SOURCE="/memory"
fi

help() {
    echo "$(gettext "Usage"): $(basename $0) [OPTIONS]... [MODULE.SB]..."
    echo "$(gettext "Generate MiniOS ISO image, adding specified modules.")"
    echo ""
    echo "$(gettext "Options"):"
    echo "  -e, --exclude REGEX   $(gettext "Exclude any existing path or file matching REGEX")"
    echo "  -n, --name NAME       $(gettext "Specify output ISO filename (default"): minios-YYYYMMDD_HHMM.iso)"
    echo "      --help            $(gettext "Display this help and exit")"
    echo "      --version         $(gettext "Display version information and exit")"
    echo ""
    echo "$(gettext "Examples"):"
    echo "  # $(gettext "Create MiniOS ISO without firefox.sb module:")"
    echo "  $(basename $0) -e 'firefox' -f minios_without_firefox.iso"
    echo "  # $(gettext "Create MiniOS text-mode core only:")"
    echo "  $(basename $0) --exclude='firmware|xorg|desktop|apps|firefox' --file=minios_textmode.iso"
    exit 0
}

brief_help() {
    echo "$(gettext "Usage"): $(basename $0) [OPTIONS]... [MODULE.SB]..."
    echo "$(gettext "Try") '$(basename $0) --help' $(gettext "for more information.")"
    exit 1
}

version() {
    echo "$(basename $0) $VERSION"
    exit 0
}

while [ "$#" -gt 0 ]; do
    case "$1" in
    -e | --exclude)
        REGEX="$2"
        shift 2
        ;;
    -n | --name)
        TARGET="$(readlink -f "$2")"
        shift 2
        ;;
    --help)
        help
        ;;
    --version)
        version
        ;;
    *) # unknown option
        if [[ $1 == -* ]]; then
            brief_help
        elif [ -e "$1" ]; then
            MODULES+=("$(readlink -f "$1")")
            shift
        fi
        ;;
    esac
done

TARGET=${TARGET:-"minios-$(date +%Y%m%d_%H%M).iso"}

if [ -e "$SOURCE/data/minios/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/data/minios
elif [ -e "$SOURCE/iso/minios/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/iso/minios
elif [ -e "$SOURCE/toram/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/toram
elif [ -e "$SOURCE/data/from/0/minios/boot/isolinux.bin" ]; then
    MINIOS=$SOURCE/data/from/0/minios
fi

if [ "$MINIOS" = "" ]; then
    echo "Cannot find boot/isolinux.bin in MiniOS data" >&2
    exit 2
fi

echo $SYSTEMNAME >/tmp/info

# Check required files
REQUIRED_FILES=(
    "$MINIOS/boot/isolinux.bin"
    "$MINIOS/boot/isohdpfx.bin"
    "$MINIOS/boot/grub/syslinux.cfg"
    "$MINIOS/boot/grub/efi64.img"
    "$MINIOS/boot/grub/efi32.img"
    "$MINIOS/boot/grub/grub.cfg"
)

for FILE in "${REQUIRED_FILES[@]}"; do
    if [ ! -e "$FILE" ]; then
        echo "$(gettext "Error: Required file not found: $FILE")" >&2
        echo "$(gettext "If you loaded the system into RAM, use 'toram=full' in the kernel parameters.")" >&2
        exit 2
    fi
done

GRAFT=$(
    cd "$MINIOS"
    find . -type f | sed -r "s:^[.]/::" | egrep -v "^changes/" | egrep -v "$REGEX" | while read LINE; do
        echo "minios/$LINE=$MINIOS/$LINE"
    done
    cd "$MINIOS/boot/EFI"
    find . -type f | sed -r "s:^[.]/::" | egrep -v "$REGEX" | while read LINE; do
        echo "EFI/$LINE=$MINIOS/boot/EFI/$LINE"
    done
    echo ".disk/info=/tmp/info"
    echo "minios/minios.conf=/etc/minios/minios.conf"
    echo "minios/boot/grub/grub.cfg=/etc/minios/grub.cfg"
    echo "minios/boot/syslinux.cfg=/etc/minios/syslinux.cfg"
)

# add all modules
for MOD in "${MODULES[@]}"; do
    if [ ! -e "$MOD" ]; then
        echo "File does not exist: $MOD"
        exit 3
    fi
    BAS="$(basename "$MOD")"
    if [[ $BAS =~ ^[0-9]{2}- ]]; then
        GRAFT="$GRAFT minios/$BAS=$MOD"
    else
        GRAFT="$GRAFT minios/modules/$BAS=$MOD"
    fi
done

(
    mkdir -p $TEMP/minios/{boot,modules,changes,scripts}
    cp "$MINIOS/boot/isolinux.bin" "$TEMP/minios/boot"
    cp "$MINIOS/boot/isohdpfx.bin" "$TEMP/minios/boot"
    cd "$TEMP"
    PERCHIMG=$(mktemp --suffix=.img)
    dd if=/dev/zero of="$PERCHIMG" bs=1M count=1
    mkfs.ext2 -L persistence "$PERCHIMG"
    xorriso \
        --as mkisofs \
        -iso-level 3 \
        -volid "${SYSTEMNAME^^}" \
        -A "$SYSTEMNAME" \
        -joliet -joliet-long -rational-rock \
        -eltorito-boot "minios/boot/isolinux.bin" \
        -eltorito-catalog "minios/boot/isolinux.boot" \
        -no-emul-boot \
        -boot-load-size 4 \
        -boot-info-table \
        -eltorito-alt-boot \
        -e "minios/boot/grub/efi64.img" \
        -no-emul-boot \
        -eltorito-alt-boot \
        -e "minios/boot/grub/efi32.img" \
        -no-emul-boot \
        --isohybrid-mbr "${DIR}/minios/boot/isohdpfx.bin" \
        -append_partition 2 0x83 "$PERCHIMG" \
        -partition_cyl_align on \
        -partition_offset 16 \
        -part_like_isohybrid \
        -graft-points $GRAFT .
) >"$TARGET"

rm -Rf $TEMP $PERCHIMG
