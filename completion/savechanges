_savechanges() {
    local cur prev words cword
    _init_completion || return

    if [[ ${words[@]} =~ --help ]] || [[ ${words[@]} =~ --version ]]; then
        return
    fi

    case $prev in
    -c | --comp)
        # Compression type completion
        COMPREPLY=($(compgen -W 'zstd gzip lzo xz' -- "$cur"))
        return
        ;;
    -b | --bext)
        # Bundle extension completion
        COMPREPLY=($(compgen -W 'sb sqfs' -- "$cur"))
        return
        ;;
    esac

    if [[ "$cur" == *=* ]]; then
        local opt="${cur%%=*}"
        cur="${cur#*=}"
        case $opt in
        --comp)
            COMPREPLY=($(compgen -W 'zstd gzip lzo xz' -- "$cur"))
            return
            ;;
        --bext)
            COMPREPLY=($(compgen -W 'sb sqfs' -- "$cur"))
            return
            ;;
        *) ;;
        esac
    fi

    if [[ "$cur" == --* ]]; then
        COMPREPLY=($(compgen -W '--comp --bext --help --version' -- "$cur"))
    elif [[ "$cur" == -* ]]; then
        COMPREPLY=($(compgen -W '-c -b --comp --bext --help --version' -- "$cur"))
    else
        # Count non-option arguments
        local arg_count=0
        for ((i = 1; i < ${#words[@]} - 1; i++)); do
            if [[ "${words[i]}" != -* ]] && [[ "${words[i-1]}" != -* || "${words[i-1]}" =~ ^-[cb]$ || "${words[i-1]}" =~ ^--(comp|bext)$ ]]; then
                ((arg_count++))
            fi
        done

        if [ $arg_count -eq 0 ]; then
            # First argument: target_file.sb
            local IFS=$'\n'
            COMPREPLY=($(compgen -f -- "$cur" | grep -E '\.(sb|sqfs)$' || compgen -f -- "$cur"))
        else
            # Second argument: changes_directory
            COMPREPLY=($(compgen -d -- "$cur"))
        fi
    fi
}

complete -F _savechanges savechanges