_apt2sb() {
    local cur prev words cword
    _init_completion -n = || return

    if [[ ${words[1]} = --help ]] || [[ ${words[1]} = --version ]]; then
        return
    fi

    case $prev in
    -n | --name)
        _filedir
        return
        ;;
    -l | --level)
        COMPREPLY=($(compgen -W '00 01 02 03 04 05 06 07 08 09' -- "$cur"))
        return
        ;;
    esac

    if [[ "${words[1]}" = install ]]; then
        if [[ "$cur" == --* ]]; then
            COMPREPLY=($(compgen -W '--file --level --yes --allow-downgrades --install-recommends --install-suggests --no-install-recommends --no-install-suggests --target-releas' -- "$cur"))
        elif [[ "$cur" == -* ]]; then
            COMPREPLY=($(compgen -W '-f -l -y -t' -- "$cur"))
        elif [[ "${#words[@]}" -ge 3 && -z "$(echo "$cur" | grep '/')" ]]; then
            COMPREPLY+=($(apt-cache --no-generate pkgnames "$cur" 2>/dev/null))
        else
            _filedir
        fi
    elif [[ "${words[1]}" = upgrade ]]; then
        if [[ "$cur" == --* ]]; then
            COMPREPLY=($(compgen -W '--file --level --yes --allow-downgrades --install-recommends --install-suggests --no-install-recommends --no-install-suggests --target-releas' -- "$cur"))
        elif [[ "$cur" == -* ]]; then
            COMPREPLY=($(compgen -W '-f -l -y -t' -- "$cur"))
        fi
    else
        if [[ "$cur" == -* ]]; then
            COMPREPLY=($(compgen -W '--help --version' -- "$cur"))
        else
            COMPREPLY=($(compgen -W 'install upgrade' -- "$cur"))
        fi
    fi
}

complete -F _apt2sb apt2sb
