_sb2iso() {
    local cur prev words cword
    _init_completion -n = || return

    if [[ ${words[@]} =~ --help ]] || [[ ${words[@]} =~ --version ]]; then
        return
    fi

    case $prev in
    -e | --exclude)
        # Regex pattern completion - let user type their own
        return
        ;;
    -n | --name)
        # Complete .iso files for output name
        local IFS=$'\n'
        COMPREPLY=($(compgen -f -- "$cur" | grep -Ei '\.iso$' || compgen -f -- "$cur"))
        return
        ;;
    --grub-menu)
        # Complete GRUB menu types
        COMPREPLY=($(compgen -W 'multilang template en_US ru_RU de_DE es_ES it_IT id_ID pt_BR' -- "$cur"))
        return
        ;;
    esac

    if [[ "$cur" == *=* ]]; then
        local opt="${cur%%=*}"
        cur="${cur#*=}"
        case $opt in
        --exclude)
            # Regex pattern completion - let user type their own
            return
            ;;
        --name)
            # Complete .iso files for output name
            local IFS=$'\n'
            COMPREPLY=($(compgen -f -- "$cur" | grep -Ei '\.iso$' || compgen -f -- "$cur"))
            return
            ;;
        --grub-menu)
            # Complete GRUB menu types
            COMPREPLY=($(compgen -W 'multilang template en_US ru_RU de_DE es_ES it_IT id_ID pt_BR' -- "$cur"))
            return
            ;;
        *) ;;
        esac
    fi

    if [[ "$cur" == --* ]]; then
        COMPREPLY=($(compgen -W '--exclude --name --grub-bios --grub-menu --help --version' -- "$cur"))
    elif [[ "$cur" == -* ]]; then
        COMPREPLY=($(compgen -W '-e -n --exclude --name --grub-bios --grub-menu --help --version' -- "$cur"))
    else
        # Complete module files - prioritize .sb files but allow any files
        local IFS=$'\n'
        local sb_files=($(compgen -f -- "$cur" | grep -Ei '\.sb$'))
        if [ ${#sb_files[@]} -gt 0 ]; then
            COMPREPLY=("${sb_files[@]}")
        else
            COMPREPLY=($(compgen -f -- "$cur"))
        fi
    fi

}

complete -F _sb2iso sb2iso
